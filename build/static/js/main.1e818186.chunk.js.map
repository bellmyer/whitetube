{"version":3,"sources":["components/HeaderComponent.js","components/VideoListComponent.js","components/MainComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","redux/reducer.js","shared/videos.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","handleLogin","event","preventDefault","_this","props","login","password","value","handleLogout","logout","loginForm","react_default","a","createElement","reactstrap_es","inline","onSubmit","className","type","id","name","innerRef","input","color","onClick","logoutForm","dark","expand","href","isOpen","navbar","es","to","this","loggedIn","Component","RenderKidVideo","_ref","video","tag","left","middle","object","src","concat","thumbnail","url","alt","body","heading","description","RenderParentVideo","_ref2","updateApproval","ReviewButton","_ref3","approved","RejectButton","ApproveButton","_ref4","outline","_ref5","VideoList","videos","map","view","react_animation_components","in","key","list","delay","Main","videoId","updateVideoApproval","logoutAndRedirect","history","push","_this2","HeaderComponent","path","component","filteredVideos","filter","VideoListComponent","withRouter","connect","state","dispatch","payload","username","initialState","Reducer","arguments","length","undefined","action","newState","Object","objectSpread","store","createStore","applyMiddleware","logger","App","react_redux_es","MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e818186.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavItem, Button, Form, FormGroup, Input } from 'reactstrap';\nimport { NavLink } from 'react-router-dom'\n\nclass Header extends Component {\n  handleLogin = (event) => {\n    event.preventDefault()\n    this.props.login('test', this.password.value)\n  }\n\n  handleLogout = (event) => {\n    event.preventDefault()\n    this.props.logout()\n  }\n\n  loginForm = () => {\n    return (\n      <Form inline onSubmit={this.handleLogin} className=\"float-right\">\n        <FormGroup>\n          <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\n          <span> </span>\n          <Button type=\"submit\" color=\"secondary\" onClick={this.login}>\n            <span className=\"fa fa-sign-in fa-lg\"></span> Login\n          </Button>\n        </FormGroup>\n      </Form>\n    )\n  }\n\n  logoutForm = () => {\n    return (\n      <Form inline onSubmit={this.handleLogout} className=\"float-right\">\n        <FormGroup>\n          <Button type=\"submit\" color=\"secondary\" onClick={this.login}>\n            <span className=\"fa fa-sign-in fa-lg\"></span> Logout\n          </Button>\n        </FormGroup>\n      </Form>\n    )\n  }\n\n  render() {\n    return (\n        <Navbar dark color=\"primary\" expand=\"md\">\n          <div className=\"container\">\n            <NavbarBrand href=\"/\">WhiteTube</NavbarBrand>\n\n            <Collapse isOpen={true} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/kids\">\n                    <span className=\"fa fa-user fa-lg\"></span> Kids\n                  </NavLink>\n                </NavItem>\n\n                { this.props.loggedIn &&\n                  <NavItem>\n                    <NavLink className=\"nav-link\" to=\"/parents\">\n                      <span className=\"fa fa-male fa-lg\"></span>\n                      <span className=\"fa fa-female fa-lg\"></span> Parents\n                    </NavLink>\n                  </NavItem>\n                }\n              </Nav>\n            </Collapse>\n\n            { !this.props.loggedIn ? this.loginForm() : this.logoutForm() }\n          </div>\n        </Navbar>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport { Media, Button } from 'reactstrap';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\n\nfunction RenderKidVideo({video}) {\n  return (\n    <Media tag=\"li\" className=\"video-listing\">\n      <Media left middle>\n        <Media object src={`assets/images/${video.thumbnail}`}  href={video.url} alt={video.name} />\n      </Media>\n\n      <Media body className=\"ml-5\">\n        <Media heading>{video.name}</Media>\n        <p>{video.description}</p>\n      </Media>\n    </Media>\n  );\n}\n\nfunction RenderParentVideo({video, updateApproval}) {\n  return (\n    <Media tag=\"li\" className=\"video-listing\">\n      <Media left middle>\n        <Media object src={`assets/images/${video.thumbnail}`}  href={video.url} alt={video.name} />\n      </Media>\n\n      <Media body className=\"ml-5\">\n        <Media heading>\n          <ReviewButton video={video} updateApproval={updateApproval} />\n          {video.name}\n        </Media>\n        <p>{video.description}</p>\n      </Media>\n    </Media>\n  );\n}\n\nfunction ReviewButton({video, updateApproval}) {\n  if (video.approved) {\n    return (<RejectButton video={video} updateApproval={updateApproval} />)\n  }\n\n  return (<ApproveButton video={video} updateApproval={updateApproval} />)\n}\n\nfunction ApproveButton({video, updateApproval}) {\n  return (\n    <Button outline color=\"success\" className=\"float-right\" onClick={() => {updateApproval(video.id, true)}}>\n      <span className=\"fa fa-thumbs-o-up fa-lg\"></span> Approve\n    </Button>\n  )\n}\n\nfunction RejectButton({video, updateApproval}) {\n  return (\n    <Button outline color=\"danger\" className=\"float-right\" onClick={() => {updateApproval(video.id, false)}}>\n      <span className=\"fa fa-thumbs-o-down fa-lg\"></span> Reject\n    </Button>\n  )\n}\n\nfunction VideoList(props) {\n  const videos = props.videos.map((video) => {\n    if (props.view === 'kids') {\n      return (\n        <Fade in>\n          <RenderKidVideo key={video.id} video={video} />\n        </Fade>\n      )\n    }\n\n    return (\n      <Fade in>\n        <RenderParentVideo key={video.id} video={video} updateApproval={props.updateApproval} />\n      </Fade>\n    )\n  });\n\n  return (\n    <div className=\"row row-content\">\n      <div className=\"col-12\">\n        <Media list>\n          <Stagger in delay={250}>\n            {videos}\n          </Stagger>\n        </Media>\n      </div>\n    </div>\n  )\n}\n\nexport default VideoList;","import React, { Component } from 'react'\nimport Header from './HeaderComponent'\nimport VideoList from './VideoListComponent'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { updateVideoApproval, login, logout } from '../redux/ActionCreators'\n\nconst mapStateToProps = state => {\n  return {\n    videos: state.videos,\n    loggedIn: state.loggedIn\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateVideoApproval: (videoId, approved) => dispatch(updateVideoApproval(videoId, approved)),\n  login: (username, password) => dispatch(login(username, password)),\n  logout: () => dispatch(logout()),\n})\n\nclass Main extends Component {\n  updateApproval = (videoId, approved) => {\n    this.props.updateVideoApproval(videoId, approved)\n  };\n\n  logoutAndRedirect = () => {\n    this.props.logout()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const kidVideos = () => {\n      const filteredVideos = this.props.videos.filter((video) => {\n        return video.approved\n      })\n\n      return (\n        <VideoList videos={filteredVideos} view=\"kids\" updateApproval={this.updateApproval} />\n      )\n    }\n\n    const parentVideos = () => {\n      return (\n        <VideoList videos={this.props.videos} view=\"parents\" updateApproval={this.updateApproval} />\n      )\n    }\n\n    return (\n      <div>\n        <Header loggedIn={this.props.loggedIn} login={this.props.login} logout={this.logoutAndRedirect} />\n\n        <div className=\"container\">\n          <Switch>\n            <Route path='/kids' component={kidVideos} />\n            <Route path='/parents' component={parentVideos} />\n            <Redirect to='/kids' />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes'\n\nexport const updateVideoApproval = (videoId, approved) => ({\n  type: ActionTypes.UPDATE_VIDEO_APPROVAL,\n  payload: {\n    videoId: videoId,\n    approved: approved\n  }\n})\n\nexport const login = (username, password) => ({\n  type: ActionTypes.LOGIN,\n  payload: {\n    username: username,\n    password: password\n  }\n})\n\nexport const logout = () => ({\n  type: ActionTypes.LOGOUT,\n  payload: {}\n})","export const UPDATE_VIDEO_APPROVAL = 'UPDATE_VIDEO_APPROVAL'\n\nexport const LOGIN = 'LOGIN'\nexport const LOGOUT = 'LOGOUT'","import { VIDEOS } from '../shared/videos'\nimport * as ActionTypes from './ActionTypes'\n\nexport const initialState = {\n  videos: VIDEOS,\n  loggedIn: false,\n}\n\nexport const Reducer = (state = initialState, action) => {\n  var newState = {...state}\n\n  switch (action.type) {\n    case ActionTypes.UPDATE_VIDEO_APPROVAL:\n      newState.videos = newState.videos.map((video) => {\n        if (video.id !== action.payload.videoId)\n          return video\n\n        video.approved = action.payload.approved\n        return video\n      })\n\n      return newState\n\n    case ActionTypes.LOGIN:\n      if (action.payload.password === 'password')\n        newState.loggedIn = true\n\n      return newState\n\n    case ActionTypes.LOGOUT:\n      newState.loggedIn = false\n\n      return newState\n\n    default:\n      return state;\n  }\n}","export const VIDEOS = [\n  {\n    id: 0,\n    name: 'Funny Baby Bunny Rabbit Videos #9 - Cute Rabbits 2018',\n    description: \"Hope you like our compilation, can we hit 250 LIKES on this video? Check out these funny rabbits and cute bunnies in this...\",\n    url: 'https://www.youtube.com/watch?v=oqu3i41DmZQ',\n    thumbnail: 'cute-bunny.png',\n    approved: true,\n  },\n  {\n    id: 1,\n    name: \"How to Trim Your Rabbit's Nails | Pet Rabbits\",\n    description: \"Pet Rabbit Essentials Timothy Hay: http://amzn.to/1cJZZeF Comb to control shedding : http://amzn.to/1KBKfog Clear Plastic Tubing...\",\n    url: \"https://www.youtube.com/watch?v=W9KemnaTGIs\",\n    thumbnail: 'bunny-care.png',\n    approved: true,\n  },\n  {\n    id: 2,\n    name: \"Funny. Don't mess with an angry rabbit\",\n    description: \"Funny angry rabbits, unbelievable reactions.\",\n    url: 'https://www.youtube.com/watch?v=pD4T_gLGVAM',\n    thumbnail: 'angry-bunny.png',\n    approved: false,\n  },\n  {\n    id: 3,\n    name: \"Mario + Rabbids Kingdom Battle - All Cutscenes Full Movie HD\",\n    description: \"This movie contains all cutscenes of Mario + Rabbids Kingdom Battle for Nintendo Switch in 1080p & 60fps. I hope you'll enjoy it...\",\n    url: \"https://www.youtube.com/watch?v=TGL-LHKSWTA\",\n    thumbnail: 'gross-bunnies.png',\n    approved: false,\n  },\n]","import React from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div>\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, createStore } from 'redux'\nimport { Reducer } from './reducer'\nimport { logger } from 'redux-logger'\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n    Reducer,\n    applyMiddleware(logger)\n  );\n\n  return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}